nrow(merged_to_use)
# Check numbers of NA per child: if a child provides NA for more than 25% of the 16 critical trials (4), the childâ€™s data will be excluded from the analyses. Update: No kid needed to be excluded for this.
table(is.na(merged_to_use$Responses))
# We previously had found 50 responses that were not provided in the format of a verbal estimate. Now, we found that 17 other responses needed to be excluded due to being 10x above the mean of estimate per numerosity (excluding the 3 millions who were entered as NA from the beginning). The 100 responses for Numerosity 6 and 8 needed to be exclude (total = 14 data points).
#read.csv("newdata_clean_slim.csv") -> dataset_slim
#nrow(dataset_slim)
#dataset_slim <- dataset_slim[complete.cases(dataset_slim), ]
#dataset_slim <- subset(dataset_slim, Numerosity != 5 & Numerosity != 7)
#nrow(dataset_slim)
#table(dataset_slim$FC_answer_clean)
#table(merged_to_use$Responses)
nrow(merged_to_use)
# Overall estimations:
mean_num_data <- ddply(merged_to_use, .(Numerosity), summarise,
mean_num = round(mean(Responses, na.rm = TRUE), digits=2),
N = length(Responses),
sd_num = round(sd(Responses, na.rm = TRUE), digits=2),
se_num = sd_num/sqrt(N),
COV_num = sd_num/mean_num)
mean_num_data
# Avr Response per Num: 1.03 for 1; 2.04 for 2; 3.03 for 3; 4.22 for 4; 6.26 for 6; 7.75 for 8. SD 0.29;0.48; 0.62; 1.80; 2.64; 3.01.
names(merged_to_use)
merged_to_use$New_Accuracy <- ifelse(merged_to_use$Numerosity == merged_to_use$Responses, 1,0)
table(is.na(merged_to_use$New_Accuracy))
mean_num_acc <- ddply(merged_to_use, .(Numerosity), summarise,
mean_acc = round(mean(New_Accuracy, na.rm = TRUE), digits=2),
N = length(New_Accuracy),
sd_acc = round(sd(New_Accuracy, na.rm = TRUE), digits=2),
se_acc = sd_acc/sqrt(N),
COV_add = sd_acc/mean_acc)
mean_num_acc
# Avr Acc per Num: 98% for 1; 97% for 2; 93% for 3; 69% for 4; 32% for 6; 16%for 8.
# names(merged_to_use) aside from Respones, no other variable contained NAs
nrow(merged_to_use) #3168
table(is.na(merged_to_use$Responses)) #  F = 3101    T = 67
final_dataset <- merged_to_use[complete.cases(merged_to_use), ]
nrow(final_dataset) # only NAs related to responses were excluded.
final_dataset$New_Accuracy<- as.numeric(final_dataset$New_Accuracy)
names(final_dataset)
final_dataset <- as.data.frame(final_dataset)
final_dataset$Responses<- as.double(final_dataset$Responses)
names(final_dataset)
accuracy_data <- ddply(final_dataset, .(SubjID,FC_NL, Numerosity), summarise,
sum_acc = sum(New_Accuracy, na.rm = TRUE))
nrow(accuracy_data)
table(accuracy_data$Numerosity,accuracy_data$sum_acc)
# For the numerosity 1, most kids got 4/4 (123), 8 kids got 3/4 and 1 got 2/4. For the Num 2, most kids got 4/4 (118), 10 kids got 3/4 and 2 got 2/4 and 2 got 1/4. For the Num 3, most kids got 4/4 (108), 12 kids got 3/4 and 7 got 2/4 and 5 got 1/4. For the Num 4, most kids got 4/4 (62), 21 kids got 3/4 and 14 got 2/4 and 23 got 1/4 and 12 got 0 out of 0.  For the Num 6, most kids got 0/4 (52), 24 kids got 1/4 and 34 got 2/4 and 15 got 3/4 and 7 got 4/4.For the Num 8, most kids got 0/4 (81), 30 kids got 1/4 and 13 got 2/4 and 3 got 3/4 and 4 got 4/4
test <- accuracy_data %>%
spread(FC_NL,sum_acc)
test$Diff_Acc = abs(test$NL1 - test$NL2)
table(test$Numerosity, test$Diff_Acc)
ggplot(test, aes(Numerosity,Diff_Acc)) + geom_count()
plot_age <- ggplot(final_dataset, aes(x=Age, y=New_Accuracy))
age_graph <- plot_age + geom_smooth()
plot(New_Accuracy ~ Age, data=final_dataset)
age_graph <- age_graph+labs(x="Age in years", y = "Accuracy")+
theme_classic() + theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
age_graph
# TO DOWNLOAD IMAGE
jpeg(file = "age_graph.jpeg", width= 800, height = 800, res=100)
age_graph
dev.off()
tiff(file = "age_graph.Tiff", width= 800, height = 800, res=100)
age_graph
dev.off()
ggsave('age_graph', device = "tiff", dpi = 1000)
#
png('age_graph.png', pointsize=10, width=2000, height=2000, res=250)
age_graph
dev.off()
names(final_dataset)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
n = length(x[[col]])
)
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- plyr::rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(final_dataset, varname="New_Accuracy", groupnames= c("Numerosity","FC_NL"))
df2$Numerosity=as.factor(df2$Numerosity)
head(df2)
df2$se = df2$sd/sqrt(df2$n)
head(df2)
df2$error = 1-(df2$New_Accuracy)
df2
df4 <- data_summary(final_dataset, varname="Responses", groupnames= c("Numerosity"))
df4$Numerosity=as.factor(df4$Numerosity)
head(df4)
df4$se = df4$sd/sqrt(df4$n)
head(df4)
df4$error = 1-(df4$Responses)
df4
p <- ggplot(df2, aes(x=Numerosity, y=error, fill=FC_NL)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=error-(se), ymax=error+(se)), width=.2,
position=position_dodge(.9))
# Finished bar plot
errorplot <- p+labs(x="Numerosity", y = "error", fill = "Languages")+
theme_classic() + theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
errorplot
df3 <- subset(df2, Numerosity != "6" & Numerosity != "8")
df_error <- data.frame(Numerosity = double(), NL1_error=double(), NL2_error=double())
for (num in unique(df3 $Numerosity)){
NL1_error = df3 [(df3 $FC_NL == "NL1") & (df3 $Numerosity == num),"error"]
NL2_error = df3 [(df3 $FC_NL == "NL2") & (df3 $Numerosity == num),"error"]
df_error_row <- data.frame(num, NL1_error,NL2_error)
names(df_error_row)<-c("Numerosity", "NL1_error", "NL2_error")
df_error <- rbind(df_error, df_error_row)
}
df_error["error_difference"] = df_error$NL2_error - df_error$NL1_error
df_error["error_difference_perc"] = (df_error$NL2_error - df_error$NL1_error)*100
df_error["error_ratio"] = (df_error$NL2_error / df_error$NL1_error) - 1
df_error["error_ratio_no1"] = (df_error$NL2_error / df_error$NL1_error)
df_error
# Plot of the Error ratio
plot1 <- ggplot(df_error) +
geom_bar(aes(Numerosity, error_ratio_no1),
position = "dodge", stat = "summary", fun.y = "mean")
plot1 <- plot1 + theme_bw() + geom_hline(yintercept=0) + ylim(0, 8)
plot1
plot_errorratio <- plot1 + theme_classic() + scale_y_continuous(n.breaks = 8) + labs(y= "Ratio of Error (NL2 / NL1)") + theme(axis.text = element_text(size = 20),axis.title = element_text(size = 18) )
plot_errorratio
# TO DOWNLOAD IMAGE
jpeg(file = "plot_errorratio.jpeg", width= 800, height = 800, res=100)
plot_errorratio
dev.off()
tiff(file = "plot_errorratio.Tiff", width= 800, height = 800, res=100)
plot_errorratio
dev.off()
ggsave('plot_errorratio', device = "tiff", dpi = 1000)
#
png('plot_errorratio.png', pointsize=10, width=2000, height=1800, res=250)
plot_errorratio
dev.off()
# Plot of the Error Difference
plot1 <- ggplot(df_error) +
geom_bar(aes(Numerosity, error_difference_perc),
position = "dodge", stat = "summary", fun.y = "mean")
plot1 <- plot1 + theme_bw() + geom_hline(yintercept=0) + ylim(-0.07, 0.07)
plot1
plot_error2 <- plot1 + theme_classic() + scale_y_continuous(n.breaks = 10) + labs(y= "Difference in Accuracy (NL1-NL2) in %") + theme(axis.text = element_text(size = 20),axis.title = element_text(size = 18) )
plot_error2
names(final_dataset)
plot1 <- ggplot(final_dataset) +
geom_bar(aes(Numerosity, New_Accuracy, fill = as.factor(FC_NL)),
position = "dodge", stat = "summary", fun.y = "mean")
plot1 <- plot1 + theme_bw()
plot1
p <- ggplot(df2, aes(x=Numerosity, y=New_Accuracy, fill=FC_NL)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=New_Accuracy-(se), ymax=New_Accuracy+(se)), width=.2,
position=position_dodge(.9))
print(p)
# Finished bar plot
accuracyplot <- p+labs(x="Numerosity", y = "Accuracy", fill = "Languages")+
theme_classic() + theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
accuracyplot
# TO DOWNLOAD IMAGE
jpeg(file = "Accuracy.jpeg", width= 500, height = 400, res=100)
accuracyplot
dev.off()
tiff(file = "Accuracy.tiff", width= 500, height = 400, res=100)
accuracyplot
dev.off()
ggsave('Accuracy', device = "tiff", dpi = 800)
#
png('Accuracy.png', pointsize=10, width=2000, height=1500, res=250)
accuracyplot
dev.off()
#names(final_dataset)
line_graph <- ggplot(final_dataset, aes(Numerosity, Responses, colour = FC_NL)) +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE ) +
theme_classic()
line_graph
estimationplot <- ggplot(final_dataset, aes(Numerosity, Responses, colour = FC_NL)) +
geom_point(position = 'jitter') +
geom_smooth(method = 'lm', se = FALSE, fullrange=TRUE ) +
theme_classic()+
labs(x="Numerosity", y = "Children's Responses", colour = "Languages")+
theme_classic() + theme(axis.text=element_text(size=16),
axis.title=element_text(size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=14))
estimationplot <- estimationplot + scale_y_continuous(breaks=seq(0,40,5)) + scale_x_discrete(limits=c("1","2","3","4", "", "6","","8"))
estimationplot
png('Estimation.png', pointsize=10, width=2000, height=1500, res=250)
estimationplot
dev.off()
names(final_dataset)
final_dataset$Numerosity_fct <-as.factor(final_dataset$Numerosity)
levels(final_dataset$Numerosity_fct)
final_dataset$FC_NL_fcr <-as.factor(final_dataset$FC_NL)
boxplot_trial<- final_dataset %>%
ggplot(aes(x=Numerosity_fct, y=Responses, fill=FC_NL_fcr)) +
geom_violin()
df_summary <- final_dataset %>%
group_by(Numerosity_fct,FC_NL) %>%
summarise(
sd = sd(Responses, na.rm = TRUE),
Responses = mean(Responses)
)
f <- ggplot(df_summary, aes(x=Numerosity_fct, y=Responses)) +
geom_pointrange(
aes(ymin = Responses-sd, ymax = Responses+sd, color = FC_NL),
position = position_dodge(0.3)
)+
scale_color_manual(values = c("#00AFBB", "#E7B800"))
f
names(final_dataset)[names(final_dataset) == "L2"] <- "Bilingual_type"
names(final_dataset)
update.packages("lme4")
help(lme4)
# Reference: https://stats.idre.ucla.edu/r/dae/mixed-effects-logistic-regression/
# Make sure to read this: https://stats.idre.ucla.edu/other/mult-pkg/introduction-to-generalized-linear-mixed-models/
bilingual_type_model <- glmer(New_Accuracy ~ Bilingual_type + (1|SubjID), data = final_dataset, family = "binomial")
summary(bilingual_type_model) # Bilingual type is not significant (estimate =  -0.1929; p= 0.203)
table(final_dataset$Task_Order)
model_order <- glmer(New_Accuracy ~ Task_Order + (1|SubjID), data = final_dataset, family = "binomial")
summary(model_order) # Order is not significant (estimate =  -0.03952; p= 0.618)
final_dataset_1to4 <- final_dataset %>%
filter(Numerosity < 6)
nrow(final_dataset) - nrow(final_dataset_1to4)
table(final_dataset_1to4$Numerosity)
glimpse(final_dataset_1to4)
typeof(final_dataset_1to4$Numerosity)
model0 <- glmer(New_Accuracy ~ Age + Numerosity + (1|SubjID), data = final_dataset_1to4, family = "binomial")
summary(model0)
#For Age: estimate =  1.3242; SE =   0.2989, Z = 4.43; 9.4e-06///// For Numerosity: estimate = -1.6154 ; SE = 0.1215, Z = -13.29; < 2e-16
# Model 1:
#typeof(final_dataset_1to4$FC_NL)
final_dataset_1to4$FC_NL_fcr <- as.factor(final_dataset_1to4$FC_NL)
levels(final_dataset_1to4$FC_NL_fcr)
model1 <- glmer(New_Accuracy ~ Age + Numerosity + FC_NL_fcr + (1|SubjID), data = final_dataset_1to4, family = "binomial")
summary(model1)
#For Age: estimate =  1.34; SE =  0.30, Z = 4.43; 9.33e-06///// For Numerosity: estimate = -1.63; SE = 0.12, Z = -13.30; < 2e-16 and NL: estimate =  -0.57; SE =  0.18, Z = -3.16; p=0.00156
anova(model0,model1) # p = 0.001397
#Model 2: Investigating the interaction between NL and Numerosity using:
model2 <- glmer(New_Accuracy ~ Age + FC_NL_fcr*Numerosity + (1|SubjID), data = final_dataset_1to4, family = "binomial")
summary(model2)
# NLxNumerosity: estimate =  0.45; SE =  0.25, Z = 1.82; p= 0.07
#Main effect NL = estimate = -2.12; SE = 0.88; Z = -2.41; p= 0.016
anova(model1,model2)# not significant  p = 0.06255
# Preparing the dataset with only responses for 6 & 8
final_dataset_6n8 <- final_dataset %>%
filter(Numerosity > 5)
table(final_dataset_6n8$Numerosity)
table(final_dataset$Numerosity)
plot_age68 <- ggplot(final_dataset_6n8, aes(x=Age, y=New_Accuracy))
age_graph68 <- plot_age68 + geom_smooth()
plot(New_Accuracy ~ Age, data=final_dataset_6n8)
#names(final_dataset_6n8)
plot6n8<-ggplot(final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")
plot6n8_2 <- plot6n8 + theme_classic() + scale_x_continuous(n.breaks = 8) + facet_wrap(~Numerosity_fct) + labs(y= "", x= "Children's Responses") + theme(text = element_text(size = 15))
plot6n8_2
# + geom_vline(aes(xintercept=mean(Responses)),
# color="blue", linetype="dashed", size=0.5)
# TO DOWNLOAD IMAGE
jpeg(file = "plot6n8_2.jpeg", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
tiff(file = "plot6n8_2.Tiff", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
ggsave('plot6n8_2', device = "tiff", dpi = 1000)
#
png('plot6n8_2.png', pointsize=10, width=2000, height=1000, res=250)
plot6n8_2
dev.off()
names(final_dataset_6n8)
levels(final_dataset_6n8$FC_NL)
table(final_dataset_6n8$FC_NL)
#names(final_dataset_6n8)
#table(final_dataset_6n8$FC_NL)
plot6n8<-ggplot(final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")
plot6n8_2 <- plot6n8 + theme_classic() + scale_x_continuous(n.breaks = 8) + facet_wrap(~Numerosity_fct + FC_NL) + labs(y= "", x= "Children's Responses") + theme(text = element_text(size = 15))
plot6n8_2
# + geom_vline(aes(xintercept=mean(Responses)),
# color="blue", linetype="dashed", size=0.5)
# TO DOWNLOAD IMAGE
jpeg(file = "plot6n8_2.jpeg", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
tiff(file = "plot6n8_2.Tiff", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
ggsave('plot6n8_2', device = "tiff", dpi = 1000)
#
png('plot6n8_2.png', pointsize=10, width=2000, height=1000, res=250)
plot6n8_2
dev.off()
#names(final_dataset_6n8)
#table(final_dataset_6n8$FC_NL)
plot6n8<-ggplot(final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")
plot6n8_2 <- plot6n8 + theme_classic() + scale_x_continuous(n.breaks = 8) + facet_wrap(~Numerosity_fct + FC_NL) + labs(y= "", x= "Children's Estimates") + theme(text = element_text(size = 10))
plot6n8_2
# + geom_vline(aes(xintercept=mean(Responses)),
# color="blue", linetype="dashed", size=0.5)
# TO DOWNLOAD IMAGE
jpeg(file = "plot6n8_2.jpeg", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
tiff(file = "plot6n8_2.Tiff", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
ggsave('plot6n8_2', device = "tiff", dpi = 1000)
#
png('plot6n8_2.png', pointsize=10, width=2000, height=1000, res=250)
plot6n8_2
dev.off()
#names(final_dataset_6n8)
#table(final_dataset_6n8$FC_NL)
plot6n8<-ggplot(final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")
plot6n8_2 <- plot6n8 + theme_classic() + scale_x_continuous(n.breaks = 8) + facet_wrap(~Numerosity_fct + FC_NL) + labs(y= "", x= "Children's Estimates") + theme(text = element_text(size = 12))
plot6n8_2
# + geom_vline(aes(xintercept=mean(Responses)),
# color="blue", linetype="dashed", size=0.5)
# TO DOWNLOAD IMAGE
jpeg(file = "plot6n8_2.jpeg", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
tiff(file = "plot6n8_2.Tiff", width= 800, height = 600, res=100)
plot6n8_2
dev.off()
ggsave('plot6n8_2', device = "tiff", dpi = 1000)
#
png('plot6n8_2.png', pointsize=10, width=2000, height=1000, res=250)
plot6n8_2
dev.off()
plot6n8<-ggplot(final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")
plot6n8_2 <- plot6n8 + theme_classic() + scale_x_continuous(n.breaks = 8) + facet_wrap(~Numerosity_fct + FC_NL) + labs(y= "", x= "Children's Estimates") + theme(text = element_text(size = 12))
plot6n8_2
ggplot(data = final_dataset_6n8, aes(Responses, n))
ggplot(data = final_dataset_6n8, aes(x=Responses))
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color="steelblue") +
labs(title = "New Marvel characters by alignment",
subtitle = "(limited to characters with more than 100 appearances)",
y = "Count of new characters", x = "") +
facet_wrap(~ Numerosity_fct)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color="steelblue") +
labs(title = "New Marvel characters by alignment",
y = "Count of new characters", x = "") +
facet_wrap(~ Numerosity_fct)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color="steelblue") +
labs(title = "New Marvel characters by alignment", x = "") +
facet_wrap(~ Numerosity_fct)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_line(color = "steelblue", size = 1) +
geom_point(color="steelblue") +
labs(title = "New Marvel characters by alignment") +
facet_wrap(~ Numerosity_fct)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8)
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_classic()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_ft_rc()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_gray()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_ipsum()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_light()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_minimal()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_update()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + plot.background = element_rect()
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw(plot.background = element_rect())
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(plot.background = element_rect())
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 12))
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 20))
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 15))
ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 14))
plot6n8_3 <- ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 14))
plot6n8_3
plot6n8_3 <- ggplot(data = final_dataset_6n8, aes(x=Responses)) +
geom_histogram(color="black", fill="white")+
facet_wrap(~ Numerosity_fct + FC_NL_fcr) + labs(y= "", x= "Children's Estimates") + scale_x_continuous(n.breaks = 8) + theme_bw() + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), text = element_text(size = 14))
plot6n8_3
# TO DOWNLOAD IMAGE
jpeg(file = "plot6n8_3.jpeg", width= 800, height = 600, res=100)
plot6n8_3
dev.off()
tiff(file = "plot6n8_3.Tiff", width= 800, height = 600, res=100)
plot6n8_3
dev.off()
ggsave('plot6n8_3', device = "tiff", dpi = 1000)
#
png('plot6n8_3.png', pointsize=10, width=2000, height=1000, res=250)
plot6n8_3
dev.off()
#Instal packages and library first
library(ggplot2)
library(lme4)
library(plyr)
# open csv file
setwd("~/Desktop/")
read.csv("Data_Analyses.csv") -> dataset_raw
dataset_clean <-dataset_raw[!dataset_raw$Exclusion =="Yes",]
names(dataset_clean)
table(dataset_raw$Notes) # checking weird responses
table(dataset_clean$PlatformPref)
nrow(dataset_clean)
nrow(dataset_raw)
table(dataset_clean$Exclusion)
unique(dataset_clean$SubjID) # 162 subjects
table(dataset_clean$FirstGen)
table(dataset_clean$English)
table(dataset_clean$Year)
mean(dataset_clean$Year)
sd(dataset_clean$Year)
range(dataset_clean$Year)
table(dataset_clean$PlatformPref) # 1. Instagram 2. Messenger 3. Snapchat 4. Discord 5. Piazza 6. Other.
#*** Mehreen will make a table summarizing what's happening with the 29 students who answered "other" when asked about their
table(dataset_clean$Major_cleaned) # 20 total with 15 with 5 or less students.
table(dataset_clean$Class_cleaned)
table(dataset_clean$Class)
table(dataset_clean$Most_used_plat)
#dummy_data <- subset(dataset_clean, PlatformPref == "6")
#Mark as excluded students who provide as answer: blank, canvas, don't interact with students, emails (gmail), N/A, no other platforms for this class, None
# you would leave: iMessage, Slack, text msg group chats, Wechat, zoom
table(dataset_clean$GPA)
mean(dataset_clean$GPA)
mean(dataset_clean$Grade_Exp)
sd(dataset_clean$Grade_Exp)
mean(dataset_clean$GPA)
sd(dataset_clean$GPA)
#Frequency of student-to-student interactions: composite score of 3 different questions with answers on a 7 point likert scales (max = 21 points) ; Q 11-12-13
hist(dataset_clean$Freq_stos_div)
hist(dataset_clean$Formality_comp_div)
hist(dataset_clean$SoCon_comp_div)
hist(dataset_clean$Grade_Exp)
hist(dataset_clean$GPA)
# Social Connectedness: composite score of 3 different questions with answers on a 7 points likert scales (max = 21 points); Q 16-17-18
# Perceived level of platformâ€™s formality: composite score of 2 different questions with answers on a 7 points likert scales (max = 14 points); Q 14 & 15
dataset_clean
setwd("~/elisabethmarchand/_posts")
setwd("~/elisabethmarchand/_posts")
